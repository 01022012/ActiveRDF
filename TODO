
 - predicates
	 - If a predicate has a multiple cardinality, am not sure if correctly managed with Literal attributes.
		 Needs to verify whether the attribute accessors (person.age and person[:age]) respect this.
		 
	 - If we implement the 'add_predicate' method, maybe we need to implement the remove_predicate method.
		 This last method should delete all the values related to this predicate.
   
 - literal and resource wrapping:
	- The exists? method take at the moment only a resource as parameter. See if 
	  it is not more practical to take an URI string instead of a resource.
	- For the find method, thinks to allow String as restriction value, and not 
	  only Literal, because for the keyword search, it's a little ugly to create a 
literal for this.

 - class URI:
	- allow classes where the localname of classURI != className, eg. class Person 
	  with classURI http://test#test. To do this, need an inverted_class_uri hash 
from classURI -> class.
  - change @@_class_uri[self] in IdentifiedResource to method :classURI, usage: 
 		class Person
 			:classURI 'http://foaf#Person'
		end
